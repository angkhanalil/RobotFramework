{
	"info": {
		"_postman_id": "32311562-982f-48eb-b5ba-35fb61b868a1",
		"name": "user",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8731987"
	},
	"item": [
		{
			"name": "Success: /users/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"check value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.name).to.eql(\"Leanne Graham\")\r",
							"    pm.expect(jsonData.address.street).to.include(\"Kulas\");\r",
							"});\r",
							"\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"username\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"email\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"address\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"street\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"suite\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"city\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"zipcode\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"geo\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"lat\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"lng\": {\r",
							"              \"type\": \"string\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"lat\",\r",
							"            \"lng\"\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"street\",\r",
							"        \"suite\",\r",
							"        \"city\",\r",
							"        \"zipcode\",\r",
							"        \"geo\"\r",
							"      ]\r",
							"    },\r",
							"    \"phone\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"website\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"company\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"catchPhrase\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"bs\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"name\",\r",
							"        \"catchPhrase\",\r",
							"        \"bs\"\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"name\",\r",
							"    \"username\", \r",
							"  ]\r",
							"};\r",
							"\r",
							"\r",
							"\r",
							"var data1 = pm.response.json();\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true; \r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success: all users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	]
}